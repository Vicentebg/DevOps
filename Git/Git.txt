mkdir (nome)                            -- criar pasta
cd (nome)                               -- entrar na pasta
cd ..                                   -- sair da pasta
git init                                -- iniciar repositório
git init --bare                         -- iniciar repositório em servidor local
git ls-files                            -- listar arquivos
ls                                      -- listar pastas 
git status                              -- mostrar o status
git add                                 -- adicionar arquivo para a staging area
git reset HEAD (nome)                   -- remove o arquivo da staging area
git commit -m "Mensagem"                -- salvar mudança e explica-la
git commit -a -m "Mensagem"             -- salvar mudanças pulando a etapa do git add
git log                                 -- exibir registro log de mudanças
git whatchanged                         -- exibir mudanças
git whatchanged-p                       -- exibir mais detalhes de mudanças
git remote                              -- acessar arquivo remoto
git remote *origin* *diretorio*         -- criar diretorio remoto
git push *origin* * *master*            -- lançar mudanças do arquivo local para o arquivo remoto
git pull *origin* *master*              -- puxar dados do servidor para o local
git fetch *origin* *master*             -- puxar dados do servidor para o local sem realizar o merge das branchs
git checkout (branch_nome)              -- selecionar branch para trabalho
git checkout -b <branch> <commit>  	-- cria uma nova branch a partir de um commit
git checkout -b (branch_nome)           -- cria uma nova branch e ja migra para ela
git checkout -- (arq_nome)              -- retorna o arquivo ao modo do ultimo commit
git checkout (tag_nome)                 -- seleciona a tag desejada
git rm (nome)                           -- remove o arquivo da staging area
git tag -a (nome_tag) -m "Mensagem"     -- cria uma tag atual
git tag                                 -- exibe a tag atual
git tag -d (nome_tag)                   -- remove a tag selecionada
git push origin (nome_tag)              -- da um release na tag
gitk                                    -- abrir o relatório visual git
git branch (nome_branch)                -- cria uma nova branch
git branch -d (nome_branch)             -- deleta a branch selecionada
git merge (branch_origen)               -- traz da origin para a branch atual
touch gitignore                         -- criar arquivo para ser ignorado pelo git no repositório
-------------------------------------------------------------------------------------------------------------------

Dicas

Ao entrar em um repositório, tanto github como gitlab web interface, você pode clicar . e irá carregar o visual studio code cloud

-------------------------------------------------------------------------------------------------------------------
Em casos de conflitos de código:
1 - Entrar na sua branch
2 - Executar os dois comandos : git fetch
				git pull origin develop
Puxando as coisas da branch develop pra sua branch
3 - git push para enviar as alterações

3.1 - Se der conflito, utilizar o comando code . para abrir VSCode e tratar os erros.